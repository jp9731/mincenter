# MinSchool 프로덕션 설정
# /etc/nginx/conf.d/minshool-production.conf
# Docker 환경용 설정 - 서브도메인 방식 (HTTP)

# 업스트림 서버 정의 (Docker 호스트의 API 서버)
upstream minshool_api {
    # CentOS 7에서는 host.docker.internal 대신 호스트 IP 사용
    server 172.17.0.1:18080;
}

# 메인 사이트 (mincenter.kr, www.mincenter.kr)
server {
    listen 80;
    server_name mincenter.kr www.mincenter.kr;

    # 보안 헤더
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # 정적 파일 루트
    root /var/www/site/static;
    index index.html;

    # 메인 사이트 (SPA 라우팅 지원)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 정적 파일 캐싱
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # 헬스체크
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 로그 설정
    access_log /var/log/nginx/minshool_site_access.log;
    error_log /var/log/nginx/minshool_site_error.log;
}

# 관리자 페이지 (admin.mincenter.kr)
server {
    listen 80;
    server_name admin.mincenter.kr;

    # 보안 헤더
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # 정적 파일 루트
    root /var/www/admin/static;
    index index.html;

    # 관리자 페이지 (SPA 라우팅 지원)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 정적 파일 캐싱
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # 헬스체크
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 로그 설정
    access_log /var/log/nginx/minshool_admin_access.log;
    error_log /var/log/nginx/minshool_admin_error.log;
}

# API 서버 (api.mincenter.kr)
server {
    listen 80;
    server_name api.mincenter.kr;

    # 보안 헤더
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # API 엔드포인트
    location / {
        proxy_pass http://minshool_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS 헤더
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        
        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 버퍼 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # 헬스체크
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 로그 설정
    access_log /var/log/nginx/minshool_api_access.log;
    error_log /var/log/nginx/minshool_api_error.log;
}

# 기본 서버 (기타 도메인)
server {
    listen 80 default_server;
    server_name _;
    
    return 444;
} 