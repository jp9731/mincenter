# MinSchool 프로덕션 설정
# /etc/nginx/conf.d/minshool-production.conf
# Docker 환경용 설정 - 서브도메인 방식 (HTTP)

# 업스트림 서버 정의 (Docker 컨테이너)
upstream minshool_api {
    # Docker 호스트의 API 서버 (바이너리로 실행)
    server host.docker.internal:18080;
}

upstream minshool_site {
    # Docker 컨테이너 내부의 사이트 서버
    server site:13000;
}

upstream minshool_admin {
    # Docker 컨테이너 내부의 관리자 서버
    server admin:13001;
}

# 메인 사이트 (mincenter.kr, www.mincenter.kr)
server {
    listen 80;
    server_name mincenter.kr www.mincenter.kr;

    # 보안 헤더
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # 메인 사이트 (SPA 라우팅 지원)
    location / {
        proxy_pass http://minshool_site;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 지원
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 버퍼 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # SPA 라우팅을 위한 fallback
        proxy_intercept_errors on;
        error_page 404 = @fallback_site;
    }

    # 정적 파일 캐싱 (Node.js 서버에서 제공)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://minshool_site;
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # SPA fallback - 사이트
    location @fallback_site {
        proxy_pass http://minshool_site;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 헬스체크
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 로그 설정
    access_log /var/log/nginx/minshool_site_access.log;
    error_log /var/log/nginx/minshool_site_error.log;
}

# 관리자 페이지 (admin.mincenter.kr)
server {
    listen 80;
    server_name admin.mincenter.kr;

    # 보안 헤더
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # 관리자 페이지 (SPA 라우팅 지원)
    location / {
        proxy_pass http://minshool_admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 버퍼 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # SPA 라우팅을 위한 fallback
        proxy_intercept_errors on;
        error_page 404 = @fallback_admin;
    }

    # 정적 파일 캐싱 (Node.js 서버에서 제공)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://minshool_admin;
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # SPA fallback - 관리자
    location @fallback_admin {
        proxy_pass http://minshool_admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 헬스체크
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 로그 설정
    access_log /var/log/nginx/minshool_admin_access.log;
    error_log /var/log/nginx/minshool_admin_error.log;
}

# API 서버 (api.mincenter.kr)
server {
    listen 80;
    server_name api.mincenter.kr;

    # 보안 헤더
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # API 엔드포인트
    location / {
        proxy_pass http://minshool_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS 헤더
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        
        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 버퍼 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # 헬스체크
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # PM2 웹 인터페이스 (선택사항)
    location /pm2 {
        proxy_pass http://host.docker.internal:9615;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 로그 설정
    access_log /var/log/nginx/minshool_api_access.log;
    error_log /var/log/nginx/minshool_api_error.log;
} 