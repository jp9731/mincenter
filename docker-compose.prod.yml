version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: ${APP_NAME:-mincenter}_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mincenter}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - ./database/data:/var/lib/postgresql/data
      - ./database/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - "15432:5432"
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  site:
    build:
      context: ./frontends/site
      dockerfile: Dockerfile
      args:
        - API_URL=${API_URL:-http://localhost:18080}
        - PUBLIC_API_URL=${PUBLIC_API_URL:-http://localhost:18080}
      cache_from:
        - node:18-alpine
    container_name: ${APP_NAME:-mincenter}_site
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      API_URL: ${PUBLIC_API_URL:-http://localhost:18080}
      PUBLIC_API_URL: ${PUBLIC_API_URL:-http://localhost:18080}
      SESSION_SECRET: ${SESSION_SECRET:-default_secret}
    ports:
      - "13000:3000"
    networks:
      - internal
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  admin:
    build:
      context: ./frontends/admin
      dockerfile: Dockerfile
      args:
        - API_URL=${API_URL:-http://localhost:18080}
        - PUBLIC_API_URL=${PUBLIC_API_URL:-http://localhost:18080}
      cache_from:
        - node:18-alpine
    container_name: ${APP_NAME:-mincenter}_admin
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      API_URL: ${PUBLIC_API_URL:-http://localhost:18080}
      PUBLIC_API_URL: ${PUBLIC_API_URL:-http://localhost:18080}
      SESSION_SECRET: ${ADMIN_SESSION_SECRET:-default_admin_secret}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@localhost}
    ports:
      - "13001:3000"
    networks:
      - internal
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  # postgres_data volume 제거 - 호스트 파일 시스템 사용

networks:
  internal:
    driver: bridge
    name: minc_int
    driver_opts:
      com.docker.network.bridge.name: minc_int
