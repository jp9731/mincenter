version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: ${APP_NAME:-mincenter}_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mincenter}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-mincenter}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  site:
    image: ${DOCKER_REGISTRY:-localhost}/${APP_NAME:-mincenter}_site:latest
    container_name: ${APP_NAME:-mincenter}_site
    restart: unless-stopped
    ports:
      - "13000:3000"
    networks:
      - internal
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  admin:
    image: ${DOCKER_REGISTRY:-localhost}/${APP_NAME:-mincenter}_admin:latest
    container_name: ${APP_NAME:-mincenter}_admin
    restart: unless-stopped
    ports:
      - "13001:3000"
    networks:
      - internal
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  internal:
    driver: bridge
    name: ${APP_NAME:-mincenter}_internal
    driver_opts:
      com.docker.network.bridge.name: ${APP_NAME:-mincenter}_internal
