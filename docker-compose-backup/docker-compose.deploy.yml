version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: mincenter-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mincenter
      POSTGRES_USER: mincenter
      POSTGRES_PASSWORD: "!@swjp0209^^"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    ports:
      - "15432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mincenter"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: mincenter-redis
    restart: unless-stopped
    command: redis-server --requirepass tnekwoddl
    volumes:
      - redis_data:/data
    ports:
      - "16379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  site:
    image: jp9731/mincenter-site:latest
    container_name: mincenter-site
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "13000:3000"
    environment:
      - NODE_ENV=production
      - PUBLIC_API_URL=https://api.mincenter.kr
      - PUBLIC_DOMAIN=mincenter.kr
      - PUBLIC_NODE_ENV=production
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin:
    build:
      context: ./frontends/admin
      dockerfile: Dockerfile
    container_name: mincenter-admin
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "13001:3000"
    environment:
      - NODE_ENV=production
      - PUBLIC_API_URL=http://api.mincenter.kr
      - PUBLIC_DOMAIN=localhost
      - PUBLIC_NODE_ENV=production
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: