name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug SSH Key
      run: |
        echo "DEPLOY_SSH_KEY 길이: ${#DEPLOY_SSH_KEY}"
        if [ -z "${{ secrets.DEPLOY_SSH_KEY }}" ]; then
          echo "❌ DEPLOY_SSH_KEY가 비어있습니다!"
          echo "GitHub Secrets에서 DEPLOY_SSH_KEY를 설정해주세요."
          exit 1
        else
          echo "✅ DEPLOY_SSH_KEY가 설정되어 있습니다."
        fi
        
        if [ -z "${{ secrets.DEPLOY_HOST }}" ]; then
          echo "❌ DEPLOY_HOST가 비어있습니다!"
          exit 1
        else
          echo "✅ DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}"
        fi
        
        if [ -z "${{ secrets.DEPLOY_USER }}" ]; then
          echo "❌ DEPLOY_USER가 비어있습니다!"
          exit 1
        else
          echo "✅ DEPLOY_USER: ${{ secrets.DEPLOY_USER }}"
        fi
        
        if [ -z "${{ secrets.DEPLOY_PATH }}" ]; then
          echo "❌ DEPLOY_PATH가 비어있습니다!"
          exit 1
        else
          echo "✅ DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}"
        fi
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
        log-public-key: true
        
    - name: Configure SSH for CentOS 7
      run: |
        mkdir -p ~/.ssh
        cat >> ~/.ssh/config << EOF
        Host ${{ secrets.DEPLOY_HOST }}
          HostName ${{ secrets.DEPLOY_HOST }}
          User ${{ secrets.DEPLOY_USER }}
          Port 22000
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null
          IdentityFile ~/.ssh/id_rsa
          IdentitiesOnly yes
          PreferredAuthentications publickey
          PubkeyAuthentication yes
          PasswordAuthentication no
          ServerAliveInterval 60
          ServerAliveCountMax 3
        EOF
        
        chmod 600 ~/.ssh/config
        
        # SSH 키 파일 생성
        echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
    - name: Add server to known hosts
      run: |
        ssh-keyscan -H -p 22000 ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
        
    - name: Test SSH Connection
      run: |
        echo "SSH 연결을 테스트합니다..."
        ssh -v -p 22000 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "echo 'SSH 연결 성공!' && whoami && pwd"
        
    - name: Deploy to server
      run: |
        ssh -p 22000 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
          cd ${{ secrets.DEPLOY_PATH }}
          echo "현재 디렉토리: $(pwd)"
          echo "Git 상태 확인..."
          git status
          echo "최신 코드 가져오기..."
          git pull origin main
          echo "배포 스크립트 실행..."
          chmod +x scripts/deploy.sh
          ./scripts/deploy.sh
        EOF
        
    - name: Health check
      run: |
        sleep 60
        echo "헬스체크 시작..."
        curl -f http://${{ secrets.DEPLOY_HOST }}:13000/health || echo "사이트 헬스체크 실패"
        curl -f http://${{ secrets.DEPLOY_HOST }}:13001/health || echo "관리자 페이지 헬스체크 실패"
        curl -f http://${{ secrets.DEPLOY_HOST }}:18080/health || echo "API 헬스체크 실패" 