name: Test SSH Connection

on:
  workflow_dispatch:

jobs:
  test-ssh:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug SSH Key
      run: |
        echo "DEPLOY_SSH_KEY 길이: ${#DEPLOY_SSH_KEY}"
        if [ -z "${{ secrets.DEPLOY_SSH_KEY }}" ]; then
          echo "❌ DEPLOY_SSH_KEY가 비어있습니다!"
          echo "GitHub Secrets에서 DEPLOY_SSH_KEY를 설정해주세요."
          echo "가이드: docs/GITHUB_SECRETS_SETUP.md"
          exit 1
        else
          echo "✅ DEPLOY_SSH_KEY가 설정되어 있습니다."
        fi
        
        if [ -z "${{ secrets.DEPLOY_HOST }}" ]; then
          echo "❌ DEPLOY_HOST가 비어있습니다!"
          exit 1
        else
          echo "✅ DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}"
        fi
        
        if [ -z "${{ secrets.DEPLOY_USER }}" ]; then
          echo "❌ DEPLOY_USER가 비어있습니다!"
          exit 1
        else
          echo "✅ DEPLOY_USER: ${{ secrets.DEPLOY_USER }}"
        fi
        
        if [ -z "${{ secrets.DEPLOY_PATH }}" ]; then
          echo "❌ DEPLOY_PATH가 비어있습니다!"
          exit 1
        else
          echo "✅ DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}"
        fi
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
        log-public-key: true
        
    - name: Configure SSH for CentOS 7
      run: |
        mkdir -p ~/.ssh
        cat >> ~/.ssh/config << EOF
        Host ${{ secrets.DEPLOY_HOST }}
          HostName ${{ secrets.DEPLOY_HOST }}
          User ${{ secrets.DEPLOY_USER }}
          Port 22000
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null
          IdentityFile ~/.ssh/id_rsa
          IdentitiesOnly yes
          PreferredAuthentications publickey
          PubkeyAuthentication yes
          PasswordAuthentication no
        EOF
        
        chmod 600 ~/.ssh/config
        
    - name: Add server to known hosts
      run: |
        ssh-keyscan -H -p 22000 ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
        
    - name: Test SSH Connection
      run: |
        echo "SSH 연결을 테스트합니다..."
        ssh -v -p 22000 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "echo '✅ SSH 연결 성공!'; whoami; pwd; date"
        
    - name: Test Project Path
      run: |
        echo "프로젝트 경로를 테스트합니다..."
        ssh -p 22000 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "cd ${{ secrets.DEPLOY_PATH }} && echo '✅ 프로젝트 경로 접근 성공!'; pwd; ls -la"
        
    - name: Test Docker
      run: |
        echo "Docker 상태를 확인합니다..."
        ssh -p 22000 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "docker --version; docker-compose --version; docker ps"
        
    - name: Test System Info
      run: |
        echo "시스템 정보를 확인합니다..."
        ssh -p 22000 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "uname -a; cat /etc/redhat-release; free -h; df -h" 