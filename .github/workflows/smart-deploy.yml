name: Smart Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Deployment reason'
        required: false
        default: 'Manual deployment'

jobs:
  smart-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH for Deployment
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
      
      - name: Smart Deploy on Server
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT || 22 }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
        run: |
          echo "🚀 Starting Smart Deploy..."
          echo "Trigger: ${{ github.event_name }}"
          echo "Reason: ${{ github.event.inputs.reason || 'Auto-deployment due to code changes' }}"
          
          # SSH known_hosts 추가
          mkdir -p ~/.ssh
          ssh-keyscan -H -p $DEPLOY_PORT $DEPLOY_HOST >> ~/.ssh/known_hosts
          
          # 서버에 스마트 배포 스크립트 실행
          ssh -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_HOST "
            cd $DEPLOY_PATH
            
            # 환경 변수 설정
            export JWT_SECRET='$JWT_SECRET'
            export REFRESH_SECRET='$REFRESH_SECRET'
            export DATABASE_URL='postgresql://mincenter:!@swjp0209^^@localhost:15432/mincenter'
            export REDIS_URL='redis://:tnekwoddl@localhost:16379'
            export API_PORT=18080
            export RUST_LOG=info
            export CORS_ORIGIN='*'
            
            # 스마트 배포 스크립트 실행
            chmod +x scripts/smart-deploy-server.sh
            ./scripts/smart-deploy-server.sh
          "
          
          echo "✅ Smart Deploy completed!"