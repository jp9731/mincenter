name: Smart Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Deployment reason'
        required: false
        default: 'Manual deployment'

jobs:
  smart-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH for Deployment
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
      
      - name: Check Required Secrets
        run: |
          echo "üîç Checking required secrets..."
          
          # ÌïÑÏàò Secrets ÌôïÏù∏
          if [ -z "${{ secrets.DEPLOY_HOST }}" ]; then
            echo "‚ùå DEPLOY_HOST secret is missing"
            exit 1
          fi
          
          if [ -z "${{ secrets.DEPLOY_USER }}" ]; then
            echo "‚ùå DEPLOY_USER secret is missing"
            exit 1
          fi
          
          if [ -z "${{ secrets.DEPLOY_PATH }}" ]; then
            echo "‚ùå DEPLOY_PATH secret is missing"
            exit 1
          fi
          
          if [ -z "${{ secrets.JWT_SECRET }}" ]; then
            echo "‚ùå JWT_SECRET secret is missing"
            exit 1
          fi
          
          if [ -z "${{ secrets.REFRESH_SECRET }}" ]; then
            echo "‚ùå REFRESH_SECRET secret is missing"
            exit 1
          fi
          
          echo "‚úÖ All required secrets are present"
      
      - name: Smart Deploy on Server
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT || 22 }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          PUBLIC_API_URL: ${{ secrets.PUBLIC_API_URL }}
          API_URL: ${{ secrets.API_URL }}
          NODE_ENV: production
          RUST_LOG: info
          CORS_ORIGIN: '*'
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          API_PORT: 18080
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          ADMIN_SESSION_SECRET: ${{ secrets.ADMIN_SESSION_SECRET }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        run: |
          echo "üöÄ Starting Smart Deploy..."
          echo "Trigger: ${{ github.event_name }}"
          echo "Reason: ${{ github.event.inputs.reason || 'Auto-deployment due to code changes' }}"
          
          # SSH known_hosts Ï∂îÍ∞Ä
          mkdir -p ~/.ssh
          ssh-keyscan -H -p $DEPLOY_PORT $DEPLOY_HOST >> ~/.ssh/known_hosts
          
          # ÏÑúÎ≤ÑÏóê Ïä§ÎßàÌä∏ Î∞∞Ìè¨ Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ (ÌôòÍ≤ΩÎ≥ÄÏàò Ï†ÑÎã¨)
          ssh -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_HOST "
            cd $DEPLOY_PATH
            
            # ÌôòÍ≤Ω Î≥ÄÏàò ÏÑ§Ï†ï (ÎπåÎìú ÏãúÏ†êÏö©)
            export JWT_SECRET='$JWT_SECRET'
            export REFRESH_SECRET='$REFRESH_SECRET'
            export VITE_API_URL='$VITE_API_URL'
            export PUBLIC_API_URL='$PUBLIC_API_URL'
            export API_URL='$API_URL'
            export NODE_ENV='$NODE_ENV'
            export RUST_LOG='$RUST_LOG'
            export CORS_ORIGIN='$CORS_ORIGIN'
            export DATABASE_URL='$DATABASE_URL'
            export REDIS_URL='$REDIS_URL'
            export API_PORT='$API_PORT'
            export REDIS_PASSWORD='$REDIS_PASSWORD'
            export POSTGRES_USER='$POSTGRES_USER'
            export POSTGRES_PASSWORD='$POSTGRES_PASSWORD'
            export POSTGRES_DB='$POSTGRES_DB'
            export SESSION_SECRET='$SESSION_SECRET'
            export ADMIN_SESSION_SECRET='$ADMIN_SESSION_SECRET'
            export ADMIN_EMAIL='$ADMIN_EMAIL'
            
            # Ïä§ÎßàÌä∏ Î∞∞Ìè¨ Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ
            chmod +x scripts/smart-deploy-server.sh
            ./scripts/smart-deploy-server.sh
          " || {
            echo "‚ùå Smart Deploy failed"
            exit 1
          }
          
          echo "‚úÖ Smart Deploy completed!"